[{"path":"http://gabrielhoffman.github.io/remaCor/articles/remaCor.html","id":"fixed-effects-meta-analysis","dir":"Articles","previous_headings":"","what":"Fixed effects meta-analysis","title":"Random effects meta-analysis for correlated test statistics","text":"LS() implements fixed effect meta-analysis correlated test statistics using method Lin Sullivan (2009). default, correlation set identity matrix independent test statistics.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/articles/remaCor.html","id":"random-effects-meta-analysis","dir":"Articles","previous_headings":"","what":"Random effects meta-analysis","title":"Random effects meta-analysis for correlated test statistics","text":"RE2C() implements random effect meta-analysis correlated test statistics jointly tests deviation mean zero well effect size heterogenity. method uses RE2 method Han Eskin (2011), RE2 correlated test statistics Han et al. (2016). default, correlation set identity matrix independent test statistics. (addition, function computes two step RE2C method Lee, Eskin, Han (2017) test heterogenity effect size applying fixed effect test.) stat1: statistic testing effect mean stat2: statistic testing effect heterogeneity RE2Cp: RE2 p-value accounting correlelation tests. (p-value appropriate questions) RE2Cp.twoStep: two step RE2C test fixed effect test. evaluated twoStep==TRUE. (typically used) QE: test statistic test (residual) heterogeneity QEp: p-value test (residual) heterogeneity Isq: ^2 statistic QE, QEp Isq evaluted correlation diagonal","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/articles/remaCor.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Random effects meta-analysis for correlated test statistics","text":"","code":"library(remaCor) library(metafor)  # Generate effects library(mvtnorm) library(clusterGeneration )  n = 4 Sigma = cov2cor(genPositiveDefMat(n)$Sigma) beta = t(rmvnorm(1, rep(0, n), Sigma)) stders = rep(.1, n)  # Standard fixed effects meta-analysis # of independent effects with metafor pacakge rma( beta, sei=stders, method=\"FE\") ##  ## Fixed-Effects Model (k = 4) ##  ## I^2 (total heterogeneity / total variability):   96.83% ## H^2 (total variability / sampling variability):  31.55 ##  ## Test for Heterogeneity: ## Q(df = 3) = 94.6404, p-val < .0001 ##  ## Model Results: ##  ## estimate      se    zval    pval   ci.lb   ci.ub       ##   0.4355  0.0500  8.7093  <.0001  0.3375  0.5335  ***  ##  ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 # Standard random effects meta-analysis # of independent effects with metafor pacakge rma( beta, sei=stders, method=\"REML\") ##  ## Random-Effects Model (k = 4; tau^2 estimator: REML) ##  ## tau^2 (estimated amount of total heterogeneity): 0.3055 (SE = 0.2576) ## tau (square root of estimated tau^2 value):      0.5527 ## I^2 (total heterogeneity / total variability):   96.83% ## H^2 (total variability / sampling variability):  31.55 ##  ## Test for Heterogeneity: ## Q(df = 3) = 94.6404, p-val < .0001 ##  ## Model Results: ##  ## estimate      se    zval    pval    ci.lb   ci.ub     ##   0.4355  0.2808  1.5506  0.1210  -0.1150  0.9859     ##  ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 # Run fixed effects meta-analysis, assume identity correlation   # Use Lin-Sullivan method LS( beta, stders) ##        beta   se            p ## 1 0.4354658 0.05 3.057116e-18 # Run fixed effects meta-analysis, accounting for correlation   # Use Lin-Sullivan method LS( beta, stders, Sigma) ##        beta        se            p ## 1 0.3898729 0.0613557 2.093698e-10 # Run random effects meta-analysis, assume identity correlation   RE2C( beta, stders) ##     stat1    stat2        RE2Cp RE2Cp.twoStep       QE          QEp      Isq ## 1 75.8522 77.98521 1.212032e-34            NA 94.64037 2.205977e-20 96.83011 # Run random effects meta-analysis, accounting for correlation  RE2C( beta, stders, Sigma) ##     stat1    stat2        RE2Cp RE2Cp.twoStep QE QEp Isq ## 1 40.3772 148.1521 4.149551e-42            NA NA  NA  NA ##     stat1    stat2        RE2Cp RE2Cp.twoStep QE QEp Isq ## 1 40.3772 148.1521 4.149551e-42            NA NA  NA  NA"},{"path":"http://gabrielhoffman.github.io/remaCor/articles/remaCor.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Random effects meta-analysis for correlated test statistics","text":"","code":"sessionInfo() ## R version 4.3.0 (2023-04-21) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] grid      stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] mvtnorm_1.1-3           metafor_4.2-0           numDeriv_2016.8-1.1     ##  [4] metadat_1.2-0           Matrix_1.5-4            remaCor_0.0.12          ##  [7] reshape2_1.4.4          ggplot2_3.4.2           clusterGeneration_1.3.7 ## [10] MASS_7.3-58.4           RUnit_0.4.32            ##  ## loaded via a namespace (and not attached): ##  [1] sass_0.4.6         utf8_1.2.3         EnvStats_2.7.0     lattice_0.21-8     ##  [5] stringi_1.7.12     digest_0.6.31      magrittr_2.0.3     evaluate_0.21      ##  [9] fastmap_1.1.1      rprojroot_2.0.3    plyr_1.8.8         jsonlite_1.8.4     ## [13] purrr_1.0.1        fansi_1.0.4        scales_1.2.1       codetools_0.2-19   ## [17] textshaping_0.3.6  jquerylib_0.1.4    Rdpack_2.4         cli_3.6.1          ## [21] rlang_1.1.1        rbibutils_2.2.13   munsell_0.5.0      withr_2.5.0        ## [25] cachem_1.0.8       yaml_2.3.7         parallel_4.3.0     tools_4.3.0        ## [29] memoise_2.0.1      colorspace_2.1-0   mathjaxr_1.6-0     Rfast_2.0.7        ## [33] RcppZiggurat_0.1.6 vctrs_0.6.2        R6_2.5.1           lifecycle_1.0.3    ## [37] stringr_1.5.0      fs_1.6.2           ragg_1.2.5         pkgconfig_2.0.3    ## [41] desc_1.4.2         pkgdown_2.0.7      bslib_0.4.2        pillar_1.9.0       ## [45] gtable_0.3.3       glue_1.6.2         Rcpp_1.0.10        systemfonts_1.0.4  ## [49] xfun_0.39          tibble_3.2.1       knitr_1.43         nlme_3.1-162       ## [53] htmltools_0.5.5    rmarkdown_2.22     compiler_4.3.0"},{"path":[]},{"path":"http://gabrielhoffman.github.io/remaCor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Hoffman. Author, maintainer.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lee, C. H., Eskin, E., & Han, B. (2017). Increasing power meta-analysis genome-wide association studies detect heterogeneous effects. Bioinformatics, 33(14), i379-i388. doi:10.1093/bioinformatics/btx242 Han, B. et al. (2016) general framework meta-analyzing dependent studies overlapping subjects association mapping. Hum. Mol. Genet., 25, 1857-1866. Han, B. Eskin, E. (2011) Random-effects model aimed discovering associations meta-analysis genome-wide association studies. . J. Hum. Genet., 88, 586-598. doi:10.1016/j.ajhg.2011.04.014","code":"@Article{,   title = {Increasing the power of meta-analysis of genome-wide association studies to detect heterogeneous effects},   author = {CH Lee and Eleazar Eskin and Buhm Han},   year = {2017},   journal = {Bioinformatics},   doi = {10.1093/bioinformatics/btx242},   volume = {33},   issue = {14},   pages = {i379--i388}, } @Article{,   title = {A general framework for meta-analyzing dependent studies with overlapping subjects in association mapping},   author = {Buhm Han and et al.},   year = {2016},   journal = {Hum. Mol. Genet.},   doi = {10.1093/hmg/ddw049},   volume = {25},   issue = {9},   pages = {1857-1866}, } @Article{,   title = {Random-effects model aimed at discovering associations in meta-analysis of genome-wide association studies},   author = {Buhm Han and Eleazar Eskin},   year = {2011},   journal = {Am. J. Hum. Genet.},   doi = {10.1016/j.ajhg.2011.04.014},   volume = {88},   issue = {5},   pages = {586--598}, }"},{"path":"http://gabrielhoffman.github.io/remaCor/index.html","id":"random-effects-meta-analysis-for-correlated-test-statistics","dir":"","previous_headings":"","what":"Random Effects Meta-Analysis for Correlated Test Statistics","title":"Random Effects Meta-Analysis for Correlated Test Statistics","text":"Meta-analysis widely used summarize estimated effects sizes across multiple statistical tests. Standard fixed random effect meta-analysis methods assume estimated effect sizes statistically independent. relax assumption enable meta-analysis correlation matrix effect size estimates known. Fixed effect meta-analysis uses method Lin Sullivan (2009), random effects meta-analysis uses method Han, et al.Â 2016.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Random Effects Meta-Analysis for Correlated Test Statistics","text":"","code":"# Run fixed effects meta-analysis, accounting for correlation  LS( beta, stders, Sigma)  # Run random effects meta-analysis, accounting for correlation  RE2C( beta, stders, Sigma)"},{"path":"http://gabrielhoffman.github.io/remaCor/index.html","id":"install-from-github","dir":"","previous_headings":"","what":"Install from GitHub","title":"Random Effects Meta-Analysis for Correlated Test Statistics","text":"","code":"devtools::install_github(\"DiseaseNeurogenomics/remaCor\")"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.empirical.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed effect meta-analysis for correlated test statistics â LS.empirical","title":"Fixed effect meta-analysis for correlated test statistics â LS.empirical","text":"Fixed effect meta-analysis correlated test statistics using Lin-Sullivan method using Monte Carlo draws null distribution compute p-value.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.empirical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed effect meta-analysis for correlated test statistics â LS.empirical","text":"","code":"LS.empirical(   beta,   stders,   cor = diag(1, length(beta)),   nu = rep(Inf, length(beta)),   n.mc.samples = 1e+05,   seed = 1 )"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.empirical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed effect meta-analysis for correlated test statistics â LS.empirical","text":"beta regression coefficients analysis stders standard errors corresponding betas cor correlation matrix test statistics.  Default considers uncorrelated test statistics nu array degrees freedom values, one coefficient n.mc.samples number Monte Carlo samples seed random seed results reproducable","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.empirical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fixed effect meta-analysis for correlated test statistics â LS.empirical","text":"theorical null Lin-Sullivan statistic fixed effects meta-analysis chisq regression coefficients tested normally distributed. works  asymptotically regression coefficients estimated sufficiently large sample.  coefficients estimated small sample, Student-t null distrubtion well approximated normal.  case, cumulative distribution function exists closed form.  simulate coefficients student-t null given covariance degrees freedom, compute Lin-Sullivan statistic fit gamma distribution null samples.  p-value observed Lin-Sullivan statistic computed using gamma approximation.","code":""},{"path":[]},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.empirical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixed effect meta-analysis for correlated test statistics â LS.empirical","text":"","code":"library(clusterGeneration) library(mvtnorm)  p = 6 C = cov2cor(genPositiveDefMat(p)$Sigma) stders = rep(2, p) V <- diag(stders) %*% C %*% diag(stders) beta = t(rmvnorm(1, rep(5, p), V))  # Run fixed effects meta-analysis,  # and get theoretical p-value   res = LS( beta, stders, C) res #>       beta        se            p #> 1 4.486575 0.6763665 3.281544e-11  # Get p-value from gamma fit to Monte Carlo samples  # from null distrubtion # This matches the theoretical p-value when betas  # are drawn from a normal distribution LS.empirical(beta, stders, C) #>       beta        se          p #> 1 4.486575 0.6763665 2.7147e-11  # Compute empirical p-value assuming  # varying and finite degrees of freedom nu = seq(5, p+4) LS.empirical(beta, stders, C, nu) #>       beta        se            p #> 1 4.486575 0.6763665 8.714367e-08"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed effect meta-analysis for correlated test statistics â LS","title":"Fixed effect meta-analysis for correlated test statistics â LS","text":"Fixed effect meta-analysis correlated test statistics using Lin-Sullivan method.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed effect meta-analysis for correlated test statistics â LS","text":"","code":"LS(beta, stders, cor = diag(1, length(beta)))"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed effect meta-analysis for correlated test statistics â LS","text":"beta regression coefficients analysis stders standard errors corresponding betas cor correlation matrix test statistics.  Default considers uncorrelated test statistics","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixed effect meta-analysis for correlated test statistics â LS","text":"Return values: beta: effect size se: effect size standard error p: p-value","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fixed effect meta-analysis for correlated test statistics â LS","text":"Perform fixed effect meta-analysis correlated test statistics using method Lin Sullivan (2009).  default, correlation set identity matrix independent test statistics. method requires correlation matrix symmatric positive definite (SPD).  condition satisfied, results NA.  matrix SPD, likely issue generated. However, evaluating correlation observations pairwise complete can give correlation matricies SPD.  case, consider running Matrix::nearPD( x, corr=TRUE) produce nearest SPD matrix input.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fixed effect meta-analysis for correlated test statistics â LS","text":"Lin D, Sullivan PF (2009). âMeta-analysis genome-wide association studies overlapping subjects.â American Journal Human Genetics, 85(6), 862--872. https://doi.org/10.1016/j.ajhg.2009.11.001.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/LS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixed effect meta-analysis for correlated test statistics â LS","text":"","code":"# Generate effects library(mvtnorm) library(clusterGeneration )  n = 4 Sigma = cov2cor(genPositiveDefMat(n)$Sigma) beta = t(rmvnorm(1, rep(0, n), Sigma)) stders = rep(.1, n)  # Run fixed effects meta-analysis,  # assume identity correlation   LS( beta, stders) #>         beta   se          p #> 1 -0.6156819 0.05 7.6495e-35  # Run random effects meta-analysis, # assume identity correlation   RE2C( beta, stders) #>      stat1    stat2         RE2Cp RE2Cp.twoStep       QE          QEp      Isq #> 1 151.6257 442.0658 3.440468e-130            NA 465.0895 1.75279e-100 99.35496  # Run fixed effects meta-analysis,  # account for correlation  LS( beta, stders, Sigma) #>         beta         se            p #> 1 -0.7189074 0.03954235 7.340078e-74  # Run random effects meta-analysis, # account for correlation  RE2C( beta, stders, Sigma) #>      stat1    stat2         RE2Cp RE2Cp.twoStep QE QEp Isq #> 1 330.5376 419.9264 3.381569e-164            NA NA  NA  NA"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/RE2C.html","id":null,"dir":"Reference","previous_headings":"","what":"Random effect meta-analysis for correlated test statistics â RE2C","title":"Random effect meta-analysis for correlated test statistics â RE2C","text":"Random effect meta-analysis correlated test statistics using RE2C","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/RE2C.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random effect meta-analysis for correlated test statistics â RE2C","text":"","code":"RE2C(beta, stders, cor = diag(1, length(beta)), twoStep = FALSE)"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/RE2C.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random effect meta-analysis for correlated test statistics â RE2C","text":"beta regression coefficients analysis stders standard errors corresponding betas cor correlation matrix test statistics.  Default considers uncorrelated test statistics twoStep Apply two step version RE2C designed applied fixed effect model.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/RE2C.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random effect meta-analysis for correlated test statistics â RE2C","text":"Return values: stat1: statistic testing effect mean stat2: statistic testing effect heterogeneity RE2Cp: RE2 p-value accounting correlelation tests RE2Cp.twoStep: two step RE2C test fixed effect test.  evaluated twoStep==TRUE QE: test statistic test (residual) heterogeneity QEp: p-value test (residual) heterogeneity Isq: ^2 statistic QE, QEp ISq evaluted correlation diagonal","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/RE2C.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random effect meta-analysis for correlated test statistics â RE2C","text":"Perform random effect meta-analysis correlated test statistics using RE2 method Han Eskin (2011), RE2 correlated test statistics Han, et al., (2016).  Also uses RE2C method Lee, Eskin Han (2017) test heterogenity effect size. default, correlation set identity matrix independent test statistics. method requires correlation matrix symmatric positive definite (SPD).  condition satisfied, results NA.  matrix SPD, likely issue generated. However, evaluating correlation observations pairwise complete can give correlation matricies SPD.  case, consider running Matrix::nearPD( x, corr=TRUE) produce nearest SPD matrix input.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/RE2C.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Random effect meta-analysis for correlated test statistics â RE2C","text":"Lee CH, Eskin E, Han B (2017). âIncreasing power meta-analysis genome-wide association studies detect heterogeneous effects.â Bioinformatics, 33(14), i379--i388. https://doi.org/10.1093/bioinformatics/btx242.  Han B, Duong D, Sul JH, de Bakker PI, Eskin E, Raychaudhuri S (2016). âgeneral framework meta-analyzing dependent studies overlapping subjects association mapping.â Human Molecular Genetics, 25(9), 1857--1866. https://doi.org/10.1093/hmg/ddw049.  Han B, Eskin E (2011). âRandom-effects model aimed discovering associations meta-analysis genome-wide association studies.â American Journal Human Genetics, 88(5), 586--598. https://doi.org/10.1016/j.ajhg.2011.04.014.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/RE2C.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random effect meta-analysis for correlated test statistics â RE2C","text":"","code":"# Generate effects library(mvtnorm) library(clusterGeneration )  set.seed(1) n = 4 Sigma = cov2cor(genPositiveDefMat(n)$Sigma) beta = t(rmvnorm(1, rep(0, n), Sigma)) stders = rep(.1, n)  # Run fixed effects meta-analysis,  # assume identity correlation   LS( beta, stders) #>         beta   se          p #> 1 0.09877893 0.05 0.04820252  # Run random effects meta-analysis, # assume identity correlation   RE2C( beta, stders) #>      stat1    stat2        RE2Cp RE2Cp.twoStep       QE          QEp      Isq #> 1 3.902911 124.5332 4.031684e-29            NA 142.8348 9.250987e-31 97.89967  # Run fixed effects meta-analysis,  # account for correlation  LS( beta, stders, Sigma) #>        beta         se            p #> 1 0.1806549 0.03973155 5.444484e-06  # Run random effects meta-analysis, # account for correlation  RE2C( beta, stders, Sigma) #>      stat1    stat2       RE2Cp RE2Cp.twoStep QE QEp Isq #> 1 20.67419 117.2758 3.77186e-31            NA NA  NA  NA"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/pkg.env.html","id":null,"dir":"Reference","previous_headings":"","what":"Local environment â pkg.env","title":"Local environment â pkg.env","text":"Local environment","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/pkg.env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local environment â pkg.env","text":"","code":"pkg.env"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/pkg.env.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Local environment â pkg.env","text":"object class environment length 0.","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation plot â plotCor","title":"Correlation plot â plotCor","text":"Correlation plot","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation plot â plotCor","text":"","code":"plotCor(cor)"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation plot â plotCor","text":"cor correlation matrix test statistics.  Default considers uncorrelated test statistics","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation plot â plotCor","text":"Plot correlation matrix","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation plot â plotCor","text":"","code":"# Generate effects library(mvtnorm) library(clusterGeneration )  n = 4 Sigma = cov2cor(genPositiveDefMat(n)$Sigma) beta = t(rmvnorm(1, rep(0, n), Sigma)) stders = rep(.1, n)    # set names rownames(Sigma) = colnames(Sigma) = LETTERS[1:n] rownames(beta) = names(stders) = LETTERS[1:n]  # Run random effects meta-analysis, # account for correlation  RE2C( beta, stders, Sigma) #>      stat1    stat2         RE2Cp RE2Cp.twoStep QE QEp Isq #> 1 98.67579 533.4688 1.583229e-138            NA NA  NA  NA  # Make plot plotCor( Sigma )"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest plot of coefficients â plotForest","title":"Forest plot of coefficients â plotForest","text":"Forest plot coefficients","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest plot of coefficients â plotForest","text":"","code":"plotForest(beta, stders)"},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest plot of coefficients â plotForest","text":"beta regression coefficients analysis stders standard errors corresponding betas","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest plot of coefficients â plotForest","text":"Forest plot effect sizes standard errors","code":""},{"path":"http://gabrielhoffman.github.io/remaCor/reference/plotForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest plot of coefficients â plotForest","text":"","code":"# Generate effects library(mvtnorm) library(clusterGeneration )  n = 4 Sigma = cov2cor(genPositiveDefMat(n)$Sigma) beta = t(rmvnorm(1, rep(0, n), Sigma)) stders = rep(.1, n)    # set names rownames(Sigma) = colnames(Sigma) = LETTERS[1:n] rownames(beta) = names(stders) = LETTERS[1:n]  # Run random effects meta-analysis, # account for correlation  RE2C( beta, stders, Sigma) #>      stat1   stat2         RE2Cp RE2Cp.twoStep QE QEp Isq #> 1 1.595871 516.491 9.729461e-114            NA NA  NA  NA  # Make plot plotForest( beta, stders )"}]
